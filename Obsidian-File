import re

# Function to read the content of a markdown file
def read_markdown_file(file_path):

    with open(file_path, 'r', encoding='utf-8') as file:
        return file.read()

# Function to write content to a markdown file (overwrites existing content)
def write_markdown_file(file_path, content):

    with open(file_path, 'w', encoding='utf-8') as file:
        file.write(content)

# Function to append content to an existing markdown file
def append_to_markdown_file(file_path, content):

    with open(file_path, 'a', encoding='utf-8') as file:
        file.write(content)

# Function to convert markdown content to Obsidian-compatible markdown
def convert_to_obsidian_markdown(content):
    """
    Converts standard markdown content to Obsidian-compatible markdown.
    """
    # Convert links to Obsidian internal links
    content = re.sub(r'\[([^\]]+)\]\([^)]+\)', r'[[\1]]', content)

    # Add front matter (optional)
    front_matter = """---
tags: [example-tag]
---
"""
    content = front_matter + content

    return content

# Main script execution
if __name__ == "__main__":
    file_path = 'notes.md'

    try:
        current_content = read_markdown_file(file_path)
        print("Current Content:")
        print(current_content)
    except FileNotFoundError:
        initial_content = "# My Notes\n\nThis is the initial content of the notes file."
        write_markdown_file(file_path, initial_content)
        current_content = initial_content
        print("File created with initial content:")
        print(current_content)

    # Define new content to add to the file
    new_content = "\n\n## New Section\n\nHere are some new notes."

    # Append the new content to the existing content
    append_to_markdown_file(file_path, new_content)

    # Read and display the updated content of the file
    updated_content = read_markdown_file(file_path)
    print("\nUpdated Content:")
    print(updated_content)

    # Convert to Obsidian-compatible markdown
    obsidian_content = convert_to_obsidian_markdown(updated_content)

    # Write the converted content to a new file
    obsidian_file_path = 'obsidian_notes.md'
    write_markdown_file(obsidian_file_path, obsidian_content)

    print("\nObsidian Markdown Content:")
    print(obsidian_content)
